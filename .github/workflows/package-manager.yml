name: Package Managers

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  node-package-managers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # package-manager: [npm, pnpm, bun, yarn]
        package-manager: [npm]
        working-directory: [
          templates/react-dedot,
          templates/react-papi,
          templates/vue-dedot,
          templates/vue-papi,
        ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js 22.x
        uses: actions/setup-node@v4
        with:
          node-version: 22.x

      - name: Setup pnpm
        if: matrix.package-manager == 'pnpm'
        uses: pnpm/action-setup@v4
        with:
          version: latest

      - name: Setup Bun
        if: matrix.package-manager == 'bun'
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Install dependencies with ${{ matrix.package-manager }}
        working-directory: ${{ matrix.working-directory }}
        run: ${{ matrix.package-manager }} install

      - name: Lint code
        working-directory: ${{ matrix.working-directory }}
        run: ${{ matrix.package-manager }} run lint

      - name: Build project with ${{ matrix.package-manager }}
        working-directory: ${{ matrix.working-directory }}
        run: ${{ matrix.package-manager }} run build

  deno:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        working-directory: [
          templates/react-dedot,
          templates/react-papi,
          templates/vue-dedot,
          templates/vue-papi,
        ]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v2
        with:
          deno-version: v2.x

      - name: Install dependencies with Deno
        working-directory: ${{ matrix.working-directory }}
        run: deno install

      - name: Lint code with Deno
        working-directory: ${{ matrix.working-directory }}
        run: deno task lint

      - name: Build project with Deno
        working-directory: ${{ matrix.working-directory }}
        run: deno task build
